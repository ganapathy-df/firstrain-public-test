/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 16:53:21 GMT 2018
 */

package com.firstrain.frapi.domain;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.Test;


public class ManagementChangeESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setUrl("AtedZw");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setTrendId(0L);
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setPerson("Q Cpz$");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldTicker("");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldRegion(null);
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldGroup("");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldDesignation(null);
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldCompanyId(0);
		assertFalse(managementChange0.isFutureEvent());
		assertEquals(0, managementChange0.getOldCompanyId());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setOldCompany("");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewTicker("");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewRegion("wu%HX36:&;@gX|@<y)");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewGroup("AtedZw");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewDesignation("[3Aa&Oswh}}XemT");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewCompanyId(1586);
		assertEquals(1586, managementChange0.getNewCompanyId());
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setNewCompany("com.firstrain.utils.FR_FileFilter");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setLinkable(false);
		assertFalse(managementChange0.isLinkable());
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		assertFalse(managementChange0.isFutureEvent());

		managementChange0.setFutureEvent(true);
		assertTrue(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		MockDate mockDate0 = new MockDate(0L);
		managementChange0.setDate(mockDate0);
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.setChangeType("t;$`N`.2ft0dT,\"");
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.isLinkable();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		boolean boolean0 = managementChange0.isFutureEvent();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getUrl();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getTrendId();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getPerson();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test24() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getOldTicker();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test25() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getOldRegion();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test26() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getOldGroup();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test27() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getOldDesignation();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test28() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		int int0 = managementChange0.getOldCompanyId();
		assertFalse(managementChange0.isFutureEvent());
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test29() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getOldCompany();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test30() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getNewTicker();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test31() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getNewRegion();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test32() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getNewGroup();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test33() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getNewDesignation();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test34() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		int int0 = managementChange0.getNewCompanyId();
		assertEquals(0, int0);
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test35() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getNewCompany();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test36() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getDate();
		assertFalse(managementChange0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test37() throws Exception {
		ManagementChange managementChange0 = new ManagementChange();
		managementChange0.getChangeType();
		assertFalse(managementChange0.isFutureEvent());
	}
}
