/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:50:00 GMT 2018
 */

package com.firstrain.frapi.repository.impl;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;

import com.firstrain.frapi.config.ServiceConfig;
import com.firstrain.frapi.util.ConvertUtil;
import com.firstrain.solr.client.DistributedSolrSearcher;
import org.apache.solr.client.solrj.SolrServer;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.Test;


public class DnbRepositoryImplESTest {

	@Test(timeout = 4000, expected = RuntimeException.class)
	public void test0() throws Exception {
		DnbRepositoryImpl dnbRepositoryImpl0 = new DnbRepositoryImpl();
		ConvertUtil convertUtil0 = new ConvertUtil();
		Injector.inject(dnbRepositoryImpl0, com.firstrain.frapi.repository.impl.DnbRepositoryImpl.class, "convertUtil",
				convertUtil0);
		ServiceConfig serviceConfig0 = mock(ServiceConfig.class, new ViolatedAssumptionAnswer());
		doReturn(null).when(serviceConfig0)
				.getDistributedSearchConfig();
		doReturn(null).when(serviceConfig0).getDocSolrServer();
		Injector.inject(dnbRepositoryImpl0,
				com.firstrain.frapi.repository.impl.EntityBaseServiceRepositoryImpl.class,
				"serviceConfig", serviceConfig0);
		Injector.validateBean(dnbRepositoryImpl0,
				com.firstrain.frapi.repository.impl.DnbRepositoryImpl.class);
		Boolean boolean0 = Boolean.valueOf("ServiceConfig.xml");
		dnbRepositoryImpl0.getFRCompanyFromDnbCompanyId("", boolean0);
		// Undeclared exception!
		Injector.executePostConstruct(dnbRepositoryImpl0,
				com.firstrain.frapi.repository.impl.EntityBaseServiceRepositoryImpl.class);
	}

	@Test(timeout = 4000, expected = IllegalArgumentException.class)
	public void test1() throws Exception {
		DnbRepositoryImpl dnbRepositoryImpl0 = new DnbRepositoryImpl();
		ConvertUtil convertUtil0 = new ConvertUtil();
		Injector.inject(dnbRepositoryImpl0, com.firstrain.frapi.repository.impl.DnbRepositoryImpl.class, "convertUtil",
				convertUtil0);
		Boolean boolean0 = Boolean.TRUE;
		dnbRepositoryImpl0.getFRCompanyFromDnbCompanyId("yfLDWLYBZ%", boolean0);
	}
}
