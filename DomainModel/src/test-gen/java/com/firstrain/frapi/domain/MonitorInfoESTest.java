/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 16:58:43 GMT 2018
 */

package com.firstrain.frapi.domain;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;


public class MonitorInfoESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		MonitorInfo.MonitorItems monitorInfo_MonitorItems0 = new MonitorInfo.MonitorItems();
		assertEquals(0L, monitorInfo_MonitorItems0.itemId);
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setTweetAvailable(null);
		assertNull(monitorInfo0.getMailAvailable());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setOwnedByType("18446744073709550478");
		assertNull(monitorInfo0.getMonitorName());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Long long0 = 0L;
		monitorInfo0.setOwnedBy(long0);
		assertFalse(monitorInfo0.getHasNew());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setMonitorName(")#EO0Lv");
		assertFalse(monitorInfo0.getManagementTurnoverAvailable());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setMonitorAdmin(true);
		assertTrue(monitorInfo0.isMonitorAdmin());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = Boolean.FALSE;
		monitorInfo0.setManagementTurnoverAvailable(boolean0);
		assertFalse(monitorInfo0.getEventAvailable());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getEventAvailable();
		monitorInfo0.setMailBadge(boolean0);
		assertNull(monitorInfo0.getMonitorName());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getEventAvailable();
		monitorInfo0.setMailAvailable(boolean0);
		assertFalse(monitorInfo0.getManagementTurnoverAvailable());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Integer integer0 = 0;
		monitorInfo0.setItemCount(integer0);
		assertNull(monitorInfo0.getFavoriteUserItemId());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setFavoriteUserItemId(null);
		assertFalse(monitorInfo0.getEventAvailable());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setFavorite(false);
		assertFalse(monitorInfo0.isFavorite());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.isMonitorAdmin();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.isFavorite();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.hashCode();
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getTweetAvailable();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		String string0 = monitorInfo0.getOwnedByType();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Long long0 = monitorInfo0.getOwnedBy();
		assertNull(long0);
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		String string0 = monitorInfo0.getMonitorName();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		String string0 = monitorInfo0.getMonitorId();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getManagementTurnoverAvailable();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getMailBadge();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getMailAvailable();
		assertNull(boolean0);
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Integer integer0 = monitorInfo0.getItemCount();
		assertNull(integer0);
	}

	@Test(timeout = 4000)
	public void test24() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getHasNew();
		monitorInfo0.setHasNew(boolean0);
		assertNull(monitorInfo0.getMonitorId());
	}

	@Test(timeout = 4000)
	public void test25() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Long long0 = monitorInfo0.getFavoriteUserItemId();
		assertNull(long0);
	}

	@Test(timeout = 4000)
	public void test26() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		Boolean boolean0 = monitorInfo0.getEventAvailable();
		monitorInfo0.setEventAvailable(boolean0);
		assertNull(monitorInfo0.getFavoriteUserItemId());
	}

	@Test(timeout = 4000)
	public void test27() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setMonitorId("4/Pa(tMZ^?l?");
		MonitorInfo monitorInfo1 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.equals(monitorInfo1);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test28() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		monitorInfo0.setMonitorId("4/Pa(tMZ^?l?");
		MonitorInfo monitorInfo1 = new MonitorInfo();
		boolean boolean0 = monitorInfo1.equals(monitorInfo0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test29() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.equals("");
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test30() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.equals(null);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test31() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		MonitorInfo monitorInfo1 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.equals(monitorInfo1);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test32() throws Exception {
		MonitorInfo monitorInfo0 = new MonitorInfo();
		boolean boolean0 = monitorInfo0.equals(monitorInfo0);
		assertTrue(boolean0);
	}
}
