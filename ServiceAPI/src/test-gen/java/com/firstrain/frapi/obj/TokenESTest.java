/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:33:02 GMT 2018
 */

package com.firstrain.frapi.obj;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import com.firstrain.solr.client.SearchTokenEntry;
import org.junit.Test;


public class TokenESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		SearchTokenEntry.Relation searchTokenEntry_Relation0 = SearchTokenEntry.Relation.MUST_NOT_HAVE;
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry("xN4;?kR(RB*V1(FFV",
				searchTokenEntry_Relation0, true);
		Token token0 = new Token(searchTokenEntry0);
		token0.setToken(searchTokenEntry0);
		assertEquals(780, SearchTokenEntry.SEARCH_TOKEN_TAG_JUNK_TYPE);
	}

	@Test(timeout = 4000)
	public void test1() throws Exception {
		SearchTokenEntry.Relation searchTokenEntry_Relation0 = SearchTokenEntry.Relation.MUST_NOT_HAVE;
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry("xN4;?kR(RB*V1(FFV",
				searchTokenEntry_Relation0, true);
		Token token0 = new Token(searchTokenEntry0);
		token0.setSearchTerm("xN4;?kR(RB*V1(FFV");
		assertEquals("xN4;?kR(RB*V1(FFV", token0.getTitle());
	}

	@Test(timeout = 4000)
	public void test2() throws Exception {
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry();
		Token token0 = new Token(searchTokenEntry0);
		token0.setIncluded(true);
		assertTrue(token0.isIncluded());
	}

	@Test(timeout = 4000)
	public void test3() throws Exception {
		Token token0 = new Token("~\"s.\"l$Yv.>x&9`L", "~\"s.\"l$Yv.>x&9`L");
		boolean boolean0 = token0.isIncluded();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test4() throws Exception {
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry();
		Token token0 = new Token(searchTokenEntry0);
		SearchTokenEntry searchTokenEntry1 = token0.getToken();
		assertSame(searchTokenEntry0, searchTokenEntry1);
	}

	@Test(timeout = 4000)
	public void test5() throws Exception {
		SearchTokenEntry.Relation searchTokenEntry_Relation0 = SearchTokenEntry.Relation.MUST_NOT_HAVE;
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry("xN4;?kR(RB*V1(FFV",
				searchTokenEntry_Relation0, true);
		Token token0 = new Token(searchTokenEntry0);
		String string0 = token0.getSearchTerm();
		assertEquals("xN4;?kR(RB*V1(FFV", string0);
	}

	@Test(timeout = 4000)
	public void test6() throws Exception {
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry();
		searchTokenEntry0.name = "com.firstrain.solr.client.SearchTokenEntry";
		Token token0 = new Token(searchTokenEntry0);
		assertEquals("com.firstrain.solr.client.SearchTokenEntry", token0.getTitle());
	}

	@Test(timeout = 4000)
	public void test7() throws Exception {
		SearchTokenEntry searchTokenEntry0 = new SearchTokenEntry();
		Token token0 = new Token(searchTokenEntry0);
		String string0 = token0.getTitle();
		assertEquals("null", string0);
	}

	@Test(timeout = 4000)
	public void test8() throws Exception {
		Token token0 = new Token();
		assertNull(token0.getSearchTerm());
	}
}
