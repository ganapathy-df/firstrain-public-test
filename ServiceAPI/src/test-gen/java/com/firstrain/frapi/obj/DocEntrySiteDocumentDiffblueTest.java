package com.firstrain.frapi.obj;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import com.diffblue.deeptestutils.Reflector;
import com.diffblue.deeptestutils.mock.DTUMemberMatcher;
import com.firstrain.mip.object.FR_IQuote;
import com.firstrain.mip.object.FR_ISiteDocumentScore;
import com.firstrain.solr.client.DocEntry;
import java.lang.reflect.Method;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Map;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

@RunWith(PowerMockRunner.class)
public class DocEntrySiteDocumentDiffblueTest {

  @Rule public final ExpectedException thrown = ExpectedException.none();
  @Rule public final Timeout globalTimeout = new Timeout(10_000);

  /* testedClasses: DocEntrySiteDocument */
  // Test generated by Diffblue Deeptest.

  @Test
  public void attributesOutputNotNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Map retval = objectUnderTest.attributes();

    // Assert
    assertNotNull(retval);
  }

  // Test generated by Diffblue Deeptest.
  @PrepareForTest(DocEntry.class)
  @Test
  public void constructorInputNotNullOutputNullPointerException() throws Exception {

    // Arrange
    final DocEntry docEntry = PowerMockito.mock(DocEntry.class);
    final Method getInsertTimeMethod = DTUMemberMatcher.method(DocEntry.class, "getInsertTime");
    PowerMockito.doReturn(null).when(docEntry, getInsertTimeMethod).withNoArguments();
    Reflector.setField(docEntry, "sitedocId", "8");
    Reflector.setField(docEntry, "title", null);

    // Act, creating object to test constructor
    thrown.expect(NullPointerException.class);
    final DocEntrySiteDocument objectUnderTest = new DocEntrySiteDocument(docEntry);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getAccessTypeOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getAccessType();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getArchiveOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getArchive();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getAttachmentCountOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getAttachmentCount();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getAttachmentsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final ArrayList retval = objectUnderTest.getAttachments();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getBitMapOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getBitMap();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getCachedOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getCached();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getCachedPageOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getCachedPage();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getCatIDsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final ArrayList retval = objectUnderTest.getCatIDs();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getCatStringOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getCatString();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getChangedXmlOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getChangedXml();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getClusterIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getClusterID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getClusterPublishedDocCountOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getClusterPublishedDocCount();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getClusterUpdateTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getClusterUpdateTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getCommentsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getComments();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getComparatorInputZeroOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);
    final int sortType = 0;

    // Act
    final Comparator retval = objectUnderTest.getComparator(sortType);

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDefMIPSourceIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getDefMIPSourceID();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDefMIPSourceNameOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getDefMIPSourceName();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDiscussionCountOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getDiscussionCount();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDocAnchorTextOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getDocAnchorText();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDocBodyOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getDocBody();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDocBodyWithoutTitleOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getDocBodyWithoutTitle();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDocCatObjsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final ArrayList retval = objectUnderTest.getDocCatObjs();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDocIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getDocID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getDserverDocIDOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getDserverDocID();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getExtra1OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getExtra1();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getExtra2OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getExtra2();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFeedIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getFeedID();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFeedNameOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getFeedName();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFlagDeletedOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.getFlagDeleted();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFlagInputOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getFlagInput();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFlagPublishedOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getFlagPublished();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getFolderTypeOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getFolderType();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getGroupIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getGroupID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getGroupStatusOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getGroupStatus();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getInputNullOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);
    final String frIKey = null;

    // Act
    final Object retval = objectUnderTest.get(frIKey);

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getInsertTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getInsertTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getLink1OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getLink1();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getLink2OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getLink2();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getMimeTypeOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getMimeType();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getOriginalDocEntryOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final DocEntry retval = objectUnderTest.getOriginalDocEntry();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getOverallScoreInputNullOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);
    final Timestamp timestamp = null;

    // Act
    final int retval = objectUnderTest.getOverallScore(timestamp);

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getOverallScoreOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getOverallScore();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getPageChangeOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getPageChange();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getPermanentOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.getPermanent();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getPersonalFolderIDsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final List retval = objectUnderTest.getPersonalFolderIDs();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getPublishDateOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Date retval = objectUnderTest.getPublishDate();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getQualityLevelOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getQualityLevel();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getQuotesOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final List<FR_IQuote> retval = objectUnderTest.getQuotes();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getRefSiteDocCountOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getRefSiteDocCount();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getRefSiteDocIDsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final ArrayList retval = objectUnderTest.getRefSiteDocIDs();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getRelatedDocCountOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getRelatedDocCount();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getRemoteUrlOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getRemoteUrl();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSentenceMarkedDocBodyOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getSentenceMarkedDocBody();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSentenceMarkedDocBodyWithoutTitleOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getSentenceMarkedDocBodyWithoutTitle();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSentenceMarkedSummaryOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getSentenceMarkedSummary();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSharableOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getSharable();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteDocIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getSiteDocID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteDocInsertTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getSiteDocInsertTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteDocSubCatIDListOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final ArrayList retval = objectUnderTest.getSiteDocSubCatIDList();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteDocumentScoreOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final FR_ISiteDocumentScore retval = objectUnderTest.getSiteDocumentScore();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteDocUpdateTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getSiteDocUpdateTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteHistoryInsertTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getSiteHistoryInsertTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSiteIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getSiteID();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSizeOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getSize();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSourceTypeIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getSourceTypeID();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getStartUrlIDsOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int[] retval = objectUnderTest.getStartUrlIDs();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getSummaryOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getSummary();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getTitleHashIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getTitleHashID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getTitleOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getTitle();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getUpdateTimeOutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final Timestamp retval = objectUnderTest.getUpdateTime();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getUrlHashIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final long retval = objectUnderTest.getUrlHashID();

    // Assert
    assertEquals(0L, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getUserEntityPrefBitMapOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getUserEntityPrefBitMap();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getUserIDOutputZero() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final int retval = objectUnderTest.getUserID();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getVersion1OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getVersion1();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void getVersion2OutputNull() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final String retval = objectUnderTest.getVersion2();

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void hasChangedOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.hasChanged();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void isArchivedOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.isArchived();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void isBitEnabledInputZeroOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);
    final int bit = 0;

    // Act
    final boolean retval = objectUnderTest.isBitEnabled(bit);

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void isCachedOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.isCached();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void isSentInDigestOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.isSentInDigest();

    // Assert
    assertEquals(false, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void isSharableOutputFalse() throws Exception {

    // Arrange
    final DocEntrySiteDocument objectUnderTest =
        (DocEntrySiteDocument)
            Reflector.getInstance("com.firstrain.frapi.obj.DocEntrySiteDocument");
    objectUnderTest.setInsertTime(null);
    objectUnderTest.setOriginalDocEntry(null);
    objectUnderTest.setSiteDocID(0L);
    objectUnderTest.setTitle(null);

    // Act
    final boolean retval = objectUnderTest.isSharable();

    // Assert
    assertEquals(false, retval);
  }
}
