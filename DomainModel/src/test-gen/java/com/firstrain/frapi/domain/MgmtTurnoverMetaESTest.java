/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 17:11:51 GMT 2018
 */

package com.firstrain.frapi.domain;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import com.firstrain.utils.MgmtChangeType;
import org.junit.Test;


public class MgmtTurnoverMetaESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.setTrendId(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.setPerson("LEFT ");
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());

		mgmtTurnoverMeta0.setFutureEvent(true);
		assertTrue(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		boolean boolean0 = mgmtTurnoverMeta0.isFutureEvent();
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getTrendId();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getPerson();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getOldRegion();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getOldGroup();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getOldDesignation();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getOldCompany();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getNewRegion();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getNewGroup();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getNewDesignation();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getNewCompany();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMeta(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createAndPopulateMgmtTurnoverMeta();
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesigAndRegion(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesgAndGroup(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.DEPARTURE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ",
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		mgmtTurnoverMeta0.setNewCompany(entity0);
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldRegion(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldGroup("com.firstrain.utils.MgmtChangeType");
		mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.HIRE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"h{8'NL.&|4ALMBGx", "h{8'NL.&|4ALMBGx");
		mgmtTurnoverMeta0.setOldCompany(entity0);
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertEquals("null JOINED from h{8&apos;NL.&amp;|4ALMBGx", string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewRegion(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertEquals("null JOINED as h{8&apos;NL.&amp;|4ALMBGx, h{8&apos;NL.&amp;|4ALMBGx", string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewGroup(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleWithoutHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals("null JOINED as h{8&apos;NL.&amp;|4ALMBGx of h{8&apos;NL.&amp;|4ALMBGx", string0);
	}

	@Test(timeout = 4000)
	public void test24() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMeta(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test25() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createAndPopulateMgmtTurnoverMeta();
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test26() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesigAndRegion(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test27() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesgAndGroup(); 
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test28() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.DEPARTURE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ",
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		mgmtTurnoverMeta0.setNewCompany(entity0);
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test29() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldRegion(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test30() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldGroup("com.firstrain.utils.MgmtChangeType");
		mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test31() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.HIRE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"h{8'NL.&|4ALMBGx", "h{8'NL.&|4ALMBGx");
		mgmtTurnoverMeta0.setOldCompany(entity0);
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong> <span style='color:#32932d; text-transform:uppercase;font-size:90%'>JOINED</span>  from entityId=null, entityName=h{8'NL.&|4ALMBGx",
				string0);
	}

	@Test(timeout = 4000)
	public void test32() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewRegion(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertEquals(
				"<strong>null</strong> <span style='color:#32932d; text-transform:uppercase;font-size:90%'>JOINED</span>  as h{8'NL.&|4ALMBGx, h{8'NL.&|4ALMBGx",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test33() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewGroup(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitleInlineHtml();
		assertEquals(
				"<strong>null</strong> <span style='color:#32932d; text-transform:uppercase;font-size:90%'>JOINED</span>  as h{8'NL.&|4ALMBGx of h{8'NL.&|4ALMBGx",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test34() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMeta(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--move'>MOVED</span></span> to r&amp;+, r&amp;+",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMeta() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.INTERNALMOVE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setNewRegion("r&+"); 
		mgmtTurnoverMeta0.setNewDesignation("r&+"); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test35() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createAndPopulateMgmtTurnoverMeta();
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--move'>MOVED</span></span> to r&amp;+ of r&amp;+",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	private MgmtTurnoverMeta createAndPopulateMgmtTurnoverMeta() {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.INTERNALMOVE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		mgmtTurnoverMeta0.setNewGroup("r&+");
		mgmtTurnoverMeta0.setNewDesignation("r&+");
		return mgmtTurnoverMeta0;
	}

	@Test(timeout = 4000)
	public void test36() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesigAndRegion(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong>, r&amp;+, r&amp;+ <span class='status-callout mgmt-status--move'>MOVED</span></span> ",
				string0);
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMetaWithOldDesigAndRegion() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.INTERNALMOVE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setOldDesignation("r&+"); 
		mgmtTurnoverMeta0.setOldRegion("r&+"); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test37() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesgAndGroup(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong>, r&amp;+ of r&amp;+ <span class='status-callout mgmt-status--move'>MOVED</span></span> ",
				string0);
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMetaWithOldDesgAndGroup() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.INTERNALMOVE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setOldDesignation("r&+"); 
		mgmtTurnoverMeta0.setOldGroup("r&+"); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test38() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.DEPARTURE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ",
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		mgmtTurnoverMeta0.setNewCompany(entity0);
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--left'>LEFT</span></span> for &lt;strong&gt;null&lt;/strong&gt; &lt;span style=&apos;color:#e82d2d; text-transform:uppercase;font-size:90%&apos;&gt;LEFT&lt;/span&gt; ",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test39() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldRegion(
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> ");
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong>, &lt;strong&gt;null&lt;/strong&gt; &lt;span style=&apos;color:#e82d2d; text-transform:uppercase;font-size:90%&apos;&gt;LEFT&lt;/span&gt; , &lt;strong&gt;null&lt;/strong&gt; &lt;span style=&apos;color:#e82d2d; text-transform:uppercase;font-size:90%&apos;&gt;LEFT&lt;/span&gt;  <span class='status-callout mgmt-status--left'>LEFT</span></span> ",
				string0);
	}

	@Test(timeout = 4000)
	public void test40() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithOldDesg(); 
		mgmtTurnoverMeta0.setOldGroup("com.firstrain.utils.MgmtChangeType");
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong>, &lt;strong&gt;null&lt;/strong&gt; &lt;span style=&apos;color:#e82d2d; text-transform:uppercase;font-size:90%&apos;&gt;LEFT&lt;/span&gt;  of com.firstrain.utils.MgmtChangeType <span class='status-callout mgmt-status--left'>LEFT</span></span> ",
				string0);
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMetaWithOldDesg() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.DEPARTURE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setOldDesignation( 
				"<strong>null</strong> <span style='color:#e82d2d; text-transform:uppercase;font-size:90%'>LEFT</span> "); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test41() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.HIRE;
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0);
		com.firstrain.frapi.pojo.Entity entity0 = new com.firstrain.frapi.pojo.Entity(
				"h{8'NL.&|4ALMBGx", "h{8'NL.&|4ALMBGx");
		mgmtTurnoverMeta0.setOldCompany(entity0);
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--joined'>JOINED</span> from h{8&apos;NL.&amp;|4ALMBGx",
				string0);
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}

	@Test(timeout = 4000)
	public void test42() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewRegion(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--joined'>JOINED</span> as h{8&apos;NL.&amp;|4ALMBGx, h{8&apos;NL.&amp;|4ALMBGx",
				string0);
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMetaWithNewRegion() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		mgmtTurnoverMeta0.setNewDesignation("h{8'NL.&|4ALMBGx"); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.HIRE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setNewRegion("h{8'NL.&|4ALMBGx"); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test43() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = createMgmtTurnoverMetaWithNewGroup(); 
		String string0 = mgmtTurnoverMeta0.getMgmtTurnoverTitle();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
		assertEquals(
				"<strong>null</strong> <span class='status-callout mgmt-status--joined'>JOINED</span> as h{8&apos;NL.&amp;|4ALMBGx of h{8&apos;NL.&amp;|4ALMBGx",
				string0);
	}
 
	private MgmtTurnoverMeta createMgmtTurnoverMetaWithNewGroup() { 
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta(); 
		mgmtTurnoverMeta0.setNewDesignation("h{8'NL.&|4ALMBGx"); 
		MgmtChangeType mgmtChangeType0 = MgmtChangeType.HIRE; 
		mgmtTurnoverMeta0.setChangeType(mgmtChangeType0); 
		mgmtTurnoverMeta0.setNewGroup("h{8'NL.&|4ALMBGx"); 
		return mgmtTurnoverMeta0; 
	} 

	@Test(timeout = 4000)
	public void test44() throws Exception {
		MgmtTurnoverMeta mgmtTurnoverMeta0 = new MgmtTurnoverMeta();
		mgmtTurnoverMeta0.getChangeType();
		assertFalse(mgmtTurnoverMeta0.isFutureEvent());
	}
}
