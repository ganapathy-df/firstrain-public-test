/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:37:50 GMT 2018
 */

package com.firstrain.frapi.util;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertNull;

import com.firstrain.frapi.domain.BaseSpec;
import com.firstrain.solr.client.SearchResult;
import java.util.concurrent.Future;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;


public class SearchResultGeneratorESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		Future<SearchResult> future0 = (Future<SearchResult>) mock(Future.class,
				new ViolatedAssumptionAnswer());
		doReturn(null).when(future0).get();
		BaseSpec baseSpec0 = new BaseSpec();
		SearchResult searchResult0 = SearchResultGenerator
				.collectSearchResults(null, future0, baseSpec0);
		assertNull(searchResult0);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test1() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Future<SearchResult> future0 = (Future<SearchResult>) mock(Future.class,
				new ViolatedAssumptionAnswer());
		doReturn(null).when(future0).get();
		Future<SearchResult> future1 = (Future<SearchResult>) mock(Future.class,
				new ViolatedAssumptionAnswer());
		// Undeclared exception!
		SearchResultGenerator.collectSearchResults(future0, future1, baseSpec0);
	}
}
