/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:41:18 GMT 2018
 */

package com.firstrain.frapi.util;

import static org.junit.Assert.assertEquals;

import java.util.Date;
import java.util.List;
import org.apache.xmlbeans.XmlCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.Test;


public class DateBucketUtilsESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		DateBucketUtils.LabelVsDate dateBucketUtils_LabelVsDate0 = dateBucketUtils0.new LabelVsDate("",
				dateBucketUtils_BucketSpec0.currentDate);
		String string0 = dateBucketUtils_LabelVsDate0.toString();
		assertEquals(0, dateBucketUtils_BucketSpec0.bucketSizeThreshold);
		assertEquals(" == null", string0);
	}

	@Test(timeout = 4000, expected = NoSuchFieldException.class)
	public void test1() throws Exception {
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		dateBucketUtils_BucketSpec0.dateFieldOrMethodName = "kk./KBVNN,d6^c";
		XmlCalendar xmlCalendar0 = new XmlCalendar();
		List<DateBucketUtils.LabelVsDate> list0 = dateBucketUtils0
				.getDateBuckets(xmlCalendar0, dateBucketUtils_BucketSpec0);
		dateBucketUtils0.getListGroupByDate(list0, dateBucketUtils_BucketSpec0);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test2() throws Exception {
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		XmlCalendar xmlCalendar0 = new XmlCalendar();
		MockDate mockDate0 = new MockDate(0, 0, 0);
		dateBucketUtils_BucketSpec0.currentDate = mockDate0;
		List<DateBucketUtils.LabelVsDate> list0 = dateBucketUtils0
				.getDateBuckets(xmlCalendar0, dateBucketUtils_BucketSpec0);
		dateBucketUtils0.getListGroupByDate(list0, dateBucketUtils_BucketSpec0);
	}

	@Test(timeout = 4000)
	public void test3() throws Exception {
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		dateBucketUtils0.getListGroupByDate(null, dateBucketUtils_BucketSpec0);
		assertEquals(0, dateBucketUtils_BucketSpec0.bucketSizeThreshold);
	}

	@Test(timeout = 4000)
	public void test4() throws Exception {
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		XmlCalendar xmlCalendar0 = new XmlCalendar();
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		DefaultEnums.DateBucketingMode defaultEnums_DateBucketingMode0 = DefaultEnums.DateBucketingMode.DATE;
		dateBucketUtils_BucketSpec0.mode = defaultEnums_DateBucketingMode0;
		dateBucketUtils0.getDateBuckets(xmlCalendar0, dateBucketUtils_BucketSpec0);
		assertEquals(0, dateBucketUtils_BucketSpec0.bucketSizeThreshold);
	}

	@Test(timeout = 4000)
	public void test5() throws Exception {
		DateBucketUtils.BucketSpec dateBucketUtils_BucketSpec0 = new DateBucketUtils.BucketSpec();
		DateBucketUtils dateBucketUtils0 = new DateBucketUtils();
		XmlCalendar xmlCalendar0 = new XmlCalendar();
		dateBucketUtils_BucketSpec0.dateBucket = true;
		List<DateBucketUtils.LabelVsDate> list0 = dateBucketUtils0
				.getDateBuckets(xmlCalendar0, dateBucketUtils_BucketSpec0);
		assertEquals(2, list0.size());
		assertEquals(0, dateBucketUtils_BucketSpec0.bucketSizeThreshold);
	}
}
