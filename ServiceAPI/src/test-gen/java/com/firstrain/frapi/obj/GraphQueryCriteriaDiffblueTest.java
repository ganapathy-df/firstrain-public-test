package com.firstrain.frapi.obj;

import static org.junit.Assert.assertEquals;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;

public class GraphQueryCriteriaDiffblueTest {

  @Rule public final ExpectedException thrown = ExpectedException.none();
  @Rule public final Timeout globalTimeout = new Timeout(10_000);

  /* testedClasses: GraphQueryCriteria */
  // Test generated by Diffblue Deeptest.

  @Test
  public void getCategoryIdOutputZero() {

    // Arrange
    final GraphQueryCriteria objectUnderTest = new GraphQueryCriteria();
    objectUnderTest.setDateRange(null);
    Reflector.setField(objectUnderTest, "numberOfDays", 0);
    objectUnderTest.setCategoryId(0);
    objectUnderTest.setSearchTokens(null);
    objectUnderTest.setCompanyId(0);
    objectUnderTest.setScope(0);

    // Act
    final int retval = objectUnderTest.getCategoryId();

    // Assert
    assertEquals(0, retval);
  }

  // Test generated by Diffblue Deeptest.

  @Test
  public void setNumberOfDaysInputPositiveOutputIllegalArgumentException() {

    // Arrange
    final GraphQueryCriteria objectUnderTest = new GraphQueryCriteria();
    objectUnderTest.setDateRange(null);
    Reflector.setField(objectUnderTest, "numberOfDays", 0);
    objectUnderTest.setCategoryId(0);
    objectUnderTest.setSearchTokens(null);
    objectUnderTest.setCompanyId(0);
    objectUnderTest.setScope(0);
    final int numberOfDays = 181;

    // Act
    thrown.expect(IllegalArgumentException.class);
    objectUnderTest.setNumberOfDays(numberOfDays);

    // Method is not expected to return due to exception thrown
  }
}
