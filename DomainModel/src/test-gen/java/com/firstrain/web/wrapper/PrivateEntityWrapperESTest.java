/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 17:34:11 GMT 2018
 */

package com.firstrain.web.wrapper;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;

import com.firstrain.web.pojo.ResultJsonRes;
import com.firstrain.web.pojo.Version;
import java.util.List;
import org.codehaus.jackson.JsonNode;
import org.codehaus.jackson.node.ArrayNode;
import org.codehaus.jackson.node.JsonNodeFactory;
import org.codehaus.jackson.node.ObjectNode;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.junit.Test;


public class PrivateEntityWrapperESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		BeanElement beanElement0 = new BeanElement("", "");
		BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
		privateEntityWrapper0.setVersions(beanAttributeList0);
		assertNull(privateEntityWrapper0.getLastModifiedBy());
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setState("XY)");
		assertNull(privateEntityWrapper0.getLastModifiedDate());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0
				.setSearchToken("org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser");
		assertNull(privateEntityWrapper0.getState());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setProgress("O");
		assertNull(privateEntityWrapper0.getState());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setName("(f:i JJh{)9#yBE,");
		assertNull(privateEntityWrapper0.getProgress());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setLastModifiedDate("B[2>?uIP@2C}](mb-1");
		assertNull(privateEntityWrapper0.getState());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setLastModifiedBy("");
		assertNull(privateEntityWrapper0.getCreatedDate());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setJobId("");
		assertNull(privateEntityWrapper0.getProgress());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		QName qName0 = new QName("+)O_\"a");
		Version version0 = new Version();
		BeanElement beanElement0 = new BeanElement(qName0, version0);
		BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
		privateEntityWrapper0.setEntities(beanAttributeList0);
		assertNull(privateEntityWrapper0.getProgress());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0.setDocuments(null);
		assertNull(privateEntityWrapper0.getName());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
		ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
		ObjectNode objectNode0 = arrayNode0.objectNode();
		privateEntityWrapper0.setDefinition(objectNode0);
		assertFalse(objectNode0.getBooleanValue());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		privateEntityWrapper0
				.setCreatedDate("org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser");
		assertNull(privateEntityWrapper0.getLastModifiedBy());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		List<Version> list0 = privateEntityWrapper0.getVersions();
		assertNull(list0);
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getState();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getSearchToken();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getProgress();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getName();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getLastModifiedDate();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getLastModifiedBy();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getJobId();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		List<PrivateEntityWrapper> list0 = privateEntityWrapper0.getEntities();
		assertNull(list0);
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		List<ResultJsonRes> list0 = privateEntityWrapper0.getDocuments();
		assertNull(list0);
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		JsonNode jsonNode0 = privateEntityWrapper0.getDefinition();
		assertNull(jsonNode0);
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		PrivateEntityWrapper privateEntityWrapper0 = new PrivateEntityWrapper();
		String string0 = privateEntityWrapper0.getCreatedDate();
		assertNull(string0);
	}
}
