/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 17:46:28 GMT 2018
 */

package com.firstrain.web.pojo;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.math.BigInteger;
import java.sql.Timestamp;
import org.junit.Test;


public class UserActivityESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		String string0 = userActivity0.toString();
		assertEquals(
				"UserActivity [id=null, userId=null, activity=null, activityTime=null, view=null, viewId=null, section=null, sectionId=null, subSection=null, subSectionId=null, enterpriseId=0, channel=null, target=null, targetId=null, responseTime=-1, userAgent=null, metaData=null, destination=null]",
				string0);
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setViewId("com.firstrain.frapi.util.DefaultEnums$UserActivityType");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setView(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setUserip("com.firstrain.web.pojo.UserActivity");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		Integer integer0 = 0;
		userActivity0.setUserId(integer0);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setUserAgent("HZnrR:D'.@~4W%WT");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000, expected = IllegalArgumentException.class)
	public void test06() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		// Undeclared exception!
		userActivity0.setType(8);
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setType(0);
		assertEquals(0, userActivity0.getType());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setTargetId("com.firstrain.web.pojo.UserActivity");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setTarget(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setSubSectionId("HZnrR:D'.@~4W%WT");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setSubSection("com.firstrain.web.pojo.UserActivity");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setStr2("pwx");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setStr1("F1FDGYa(K;huQklHs\"");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setSectionId("com.firstrain.web.pojo.UserActivity");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setSection(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		assertEquals((-1), userActivity0.getResponseTime());

		userActivity0.setResponseTime(0);
		assertEquals(0, userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setParsedUserAgent("");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setMetaData("fhdG@/d>OT");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		BigInteger bigInteger0 = BigInteger.ZERO;
		userActivity0.setLegacyId(bigInteger0);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setLegacyData(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setInsertTime(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		byte[] byteArray0 = new byte[7];
		BigInteger bigInteger0 = new BigInteger(byteArray0);
		userActivity0.setId(bigInteger0);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setExternal(true);
		assertTrue(userActivity0.isExternal());
	}

	@Test(timeout = 4000)
	public void test24() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setEnterpriseId(1420);
		assertEquals(1420, userActivity0.getEnterpriseId());
	}

	@Test(timeout = 4000)
	public void test25() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setDnbUserId("com.firstrain.web.pojo.UserActivity");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test26() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setDestination("MT_DEPARTURE");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test27() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setChannel("value of `type` column is wrong user activity type enum ordinal.");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test28() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setApiVersion("FSI");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test29() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setActivityTime(null);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test30() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.setActivity("pwx");
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test31() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.isExternal();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test32() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getViewId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test33() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getView();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test34() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getUserip();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test35() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getUserId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test36() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getUserAgent();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test37() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		int int0 = userActivity0.getType();
		assertEquals(1, int0);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test38() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getTargetId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test39() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getTarget();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test40() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getSubSectionId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test41() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getSubSection();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test42() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getStr2();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test43() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getStr1();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test44() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getSectionId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test45() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getSection();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test46() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		int int0 = userActivity0.getResponseTime();
		assertEquals((-1), int0);
	}

	@Test(timeout = 4000)
	public void test47() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getParsedUserAgent();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test48() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getMetaData();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test49() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getLegacyId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test50() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getLegacyData();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test51() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getInsertTime();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test52() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test53() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		int int0 = userActivity0.getEnterpriseId();
		assertEquals(0, int0);
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test54() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getDnbUserId();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test55() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getDestination();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test56() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getChannel();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test57() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getApiVersion();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test58() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getActivityTime();
		assertEquals((-1), userActivity0.getResponseTime());
	}

	@Test(timeout = 4000)
	public void test59() throws Exception {
		UserActivity userActivity0 = new UserActivity();
		userActivity0.getActivity();
		assertEquals((-1), userActivity0.getResponseTime());
	}
}
