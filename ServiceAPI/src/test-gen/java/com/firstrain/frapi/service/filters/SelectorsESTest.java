/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:32:46 GMT 2018
 */

package com.firstrain.frapi.service.filters;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import com.firstrain.frapi.events.EventObj;
import com.firstrain.frapi.events.IEvents;
import org.junit.Test;


public class SelectorsESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum[] iEvents_EventTypeEnumArray0 = new IEvents.EventTypeEnum[7];
		Selectors.WebVolumeSelector selectors_WebVolumeSelector0 = new Selectors.WebVolumeSelector(1.0,
				iEvents_EventTypeEnumArray0[1], true);
		boolean boolean0 = selectors_WebVolumeSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum iEvents_EventTypeEnum0 = IEvents.EventTypeEnum.TYPE_MGMT_CHANGE_EXECUTIVE_TREASURER;
		eventObj0.setEventType(iEvents_EventTypeEnum0);
		Selectors.WebVolumeSelector selectors_WebVolumeSelector0 = new Selectors.WebVolumeSelector(
				(-508L), iEvents_EventTypeEnum0, false);
		boolean boolean0 = selectors_WebVolumeSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum iEvents_EventTypeEnum0 = IEvents.EventTypeEnum.TYPE_MGMT_CHANGE_EXECUTIVE_TREASURER;
		Selectors.WebVolumeSelector selectors_WebVolumeSelector0 = new Selectors.WebVolumeSelector(
				(-508L), iEvents_EventTypeEnum0, false);
		boolean boolean0 = selectors_WebVolumeSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		IEvents.EventTypeEnum iEvents_EventTypeEnum0 = IEvents.EventTypeEnum.TYPE_MGMT_CHANGE_EXECUTIVE_MANAGING_DIRECTOR;
		Selectors.WebVolumeSelector selectors_WebVolumeSelector0 = new Selectors.WebVolumeSelector(0.0,
				iEvents_EventTypeEnum0);
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		Selectors.WebVolumeSelector selectors_WebVolumeSelector0 = new Selectors.WebVolumeSelector(
				891.57768370814);
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum iEvents_EventTypeEnum0 = IEvents.EventTypeEnum.TYPE_MGMT_CHANGE_EXECUTIVE_TREASURER;
		eventObj0.setEventType(iEvents_EventTypeEnum0);
		IEvents.EventTypeEnum[] iEvents_EventTypeEnumArray0 = new IEvents.EventTypeEnum[1];
		Selectors.TypeSelector selectors_TypeSelector0 = new Selectors.TypeSelector(
				iEvents_EventTypeEnumArray0);
		boolean boolean0 = selectors_TypeSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum[] iEvents_EventTypeEnumArray0 = new IEvents.EventTypeEnum[1];
		Selectors.TypeSelector selectors_TypeSelector0 = new Selectors.TypeSelector(
				iEvents_EventTypeEnumArray0);
		boolean boolean0 = selectors_TypeSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		EventObj eventObj0 = new EventObj();
		Selectors.StockPriceChangeSelector selectors_StockPriceChangeSelector0 = new Selectors.StockPriceChangeSelector(
				(-3743.0), true);
		boolean boolean0 = selectors_StockPriceChangeSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		Selectors.StockPriceChangeSelector selectors_StockPriceChangeSelector0 = new Selectors.StockPriceChangeSelector(
				(-1.0));
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		EventObj eventObj0 = new EventObj();
		Selectors.NonexecTurnoverSelector selectors_NonexecTurnoverSelector0 = new Selectors.NonexecTurnoverSelector();
		boolean boolean0 = selectors_NonexecTurnoverSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test10() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_MGMT_CHANGE;
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		Selectors.LowRankedInternalMgmtTurnoverSelector selectors_LowRankedInternalMgmtTurnoverSelector0 = new Selectors.LowRankedInternalMgmtTurnoverSelector();
		// Undeclared exception!
		selectors_LowRankedInternalMgmtTurnoverSelector0.isSelected(eventObj0);
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		Selectors.LowRankedInternalMgmtTurnoverSelector selectors_LowRankedInternalMgmtTurnoverSelector0 = new Selectors.LowRankedInternalMgmtTurnoverSelector();
		EventObj eventObj0 = new EventObj();
		boolean boolean0 = selectors_LowRankedInternalMgmtTurnoverSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_MGMT_CHANGE;
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		Selectors.InternalTurnoverSelector selectors_InternalTurnoverSelector0 = new Selectors.InternalTurnoverSelector();
		boolean boolean0 = selectors_InternalTurnoverSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		Selectors.InternalTurnoverSelector selectors_InternalTurnoverSelector0 = new Selectors.InternalTurnoverSelector();
		EventObj eventObj0 = new EventObj();
		boolean boolean0 = selectors_InternalTurnoverSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		EventObj eventObj0 = new EventObj();
		Selectors.HireSelector selectors_HireSelector0 = new Selectors.HireSelector();
		boolean boolean0 = selectors_HireSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		Selectors.HireSelector selectors_HireSelector0 = new Selectors.HireSelector();
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_MGMT_CHANGE;
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		boolean boolean0 = selectors_HireSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_DELAYED_FILING;
		Selectors.GroupSelector selectors_GroupSelector0 = new Selectors.GroupSelector(
				iEvents_EventGroupEnum0);
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		boolean boolean0 = selectors_GroupSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_SHELF_REGISTRATIONS;
		Selectors.GroupSelector selectors_GroupSelector0 = new Selectors.GroupSelector(
				iEvents_EventGroupEnum0);
		boolean boolean0 = selectors_GroupSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		EventObj eventObj0 = new EventObj();
		Selectors.DepartureSelector selectors_DepartureSelector0 = new Selectors.DepartureSelector();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_MGMT_CHANGE;
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		boolean boolean0 = selectors_DepartureSelector0.isSelected(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		EventObj eventObj0 = new EventObj();
		Selectors.DepartureSelector selectors_DepartureSelector0 = new Selectors.DepartureSelector();
		boolean boolean0 = selectors_DepartureSelector0.isSelected(eventObj0);
		assertFalse(boolean0);
	}
}
