/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 18:38:05 GMT 2018
 */

package com.firstrain.web.controller.staticdata;

import static org.evosuite.shaded.org.mockito.Mockito.anyString;
import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;

import com.firstrain.web.service.staticdata.StaticDataService;
import java.io.PrintWriter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.Test;


public class WidgetControllerESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		WidgetController widgetController0 = new WidgetController();
		StaticDataService staticDataService0 = new StaticDataService();
		Injector.inject(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class, "staticDataService",
				staticDataService0);
		Injector.validateBean(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class);
		HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class,
				new ViolatedAssumptionAnswer());
		doReturn("").when(httpServletRequest0).getHeader(anyString());
		HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(
				httpServletRequest0);
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		widgetController0.manageOptions(httpServletRequestWrapper0, httpServletResponseWrapper0);
	}

	@Test(timeout = 4000)
	public void test1() throws Exception {
		WidgetController widgetController0 = new WidgetController();
		StaticDataService staticDataService0 = new StaticDataService();
		Injector.inject(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class, "staticDataService",
				staticDataService0);
		Injector.validateBean(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class);
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		doReturn(null).when(httpServletResponse0).getWriter();
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		widgetController0.getGraph(httpServletResponseWrapper0, "M:4#", "M:4#", "M:4#");
	}

	@Test(timeout = 4000)
	public void test2() throws Exception {
		WidgetController widgetController0 = new WidgetController();
		StaticDataService staticDataService0 = new StaticDataService();
		Injector.inject(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class, "staticDataService",
				staticDataService0);
		Injector.validateBean(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class);
		PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		doReturn(printWriter0).when(httpServletResponse0).getWriter();
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		widgetController0.getGraph(httpServletResponseWrapper0, "", "KjG=K;vFc1PK(;|2I8", "hm.23~");
	}

	@Test(timeout = 4000)
	public void test3() throws Exception {
		WidgetController widgetController0 = new WidgetController();
		StaticDataService staticDataService0 = new StaticDataService();
		Injector.inject(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class, "staticDataService",
				staticDataService0);
		Injector.validateBean(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class);
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		doReturn(null).when(httpServletResponse0).getWriter();
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		widgetController0.getConfig(httpServletResponseWrapper0, "dauc4R.BhzV8|Cbj");
	}

	@Test(timeout = 4000)
	public void test4() throws Exception {
		WidgetController widgetController0 = new WidgetController();
		StaticDataService staticDataService0 = new StaticDataService();
		Injector.inject(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class, "staticDataService",
				staticDataService0);
		Injector.validateBean(widgetController0,
				com.firstrain.web.controller.staticdata.WidgetController.class);
		PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		doReturn(printWriter0).when(httpServletResponse0).getWriter();
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		widgetController0.getConfig(httpServletResponseWrapper0, "");
	}
}
