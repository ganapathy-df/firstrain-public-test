/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:15:37 GMT 2018
 */

package com.firstrain.frapi.service.impl;

import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;

import com.firstrain.db.obj.Items;
import com.firstrain.frapi.obj.MonitorObj;
import com.firstrain.frapi.repository.EntityBaseServiceRepository;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.Test;


public class RegionExcelUtilImplESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Items items0 = new Items();
		MonitorObj monitorObj0 = new MonitorObj(items0);
		RegionExcelUtilImpl.Region regionExcelUtilImpl_Region0 = regionExcelUtilImpl0.new Region(
				monitorObj0);
		MonitorObj monitorObj1 = regionExcelUtilImpl_Region0.getParent();
		assertFalse(monitorObj1.isExclude());
	}

	@Test(timeout = 4000)
	public void test1() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		MonitorObj monitorObj0 = new MonitorObj();
		RegionExcelUtilImpl.Region regionExcelUtilImpl_Region0 = regionExcelUtilImpl0.new Region(
				monitorObj0);
		List<MonitorObj> list0 = regionExcelUtilImpl_Region0.getChildren();
		assertEquals(0, list0.size());
	}

	@Test(timeout = 4000)
	public void test2() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		MonitorObj monitorObj0 = new MonitorObj();
		RegionExcelUtilImpl.Region regionExcelUtilImpl_Region0 = regionExcelUtilImpl0.new Region(
				monitorObj0);
		regionExcelUtilImpl_Region0.addChild(monitorObj0);
		assertNull(monitorObj0.getType());
	}

	@Test(timeout = 4000)
	public void test3() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		List<RegionExcelUtilImpl.Region> list0 = regionExcelUtilImpl0.getRegions();
		assertNull(list0);
	}

	@Test(timeout = 4000)
	public void test4() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Map<String, String> map0 = regionExcelUtilImpl0.getRegionVsParentRegion();
		assertNull(map0);
	}

	@Test(timeout = 4000)
	public void test5() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Map<String, String> map0 = regionExcelUtilImpl0.getRegionVsCountryCode();
		assertNull(map0);
	}

	@Test(timeout = 4000)
	public void test6() throws Exception {
		RegionExcelUtilImpl regionExcelUtilImpl0 = new RegionExcelUtilImpl();
		EntityBaseServiceRepository entityBaseServiceRepository0 = mock(
				EntityBaseServiceRepository.class, new ViolatedAssumptionAnswer());
		Injector.inject(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class,
				"entityBaseServiceRepository", entityBaseServiceRepository0);
		Injector.validateBean(regionExcelUtilImpl0,
				com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Injector
				.executePostConstruct(regionExcelUtilImpl0,
						com.firstrain.frapi.service.impl.RegionExcelUtilImpl.class);
		Map<String, String> map0 = regionExcelUtilImpl0.getRegionNameVsSearchToken();
		assertNull(map0);
	}
}
