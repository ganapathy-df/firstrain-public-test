<project name="ServiceAPI" default="build-deploy-maven" basedir="."
	xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<property name="build-dependencies" value="${basedir}/../../MI4/build-dependencies" />

	<property name="lib" value="${basedir}/../../MI4/lib" />
	<property name="maven.ant.tasks.url"
		value="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar" />
	<property name="maven.ant.tasks.jar"
		value="${lib}/mavenant/maven-ant-tasks-2.1.3.jar" />
	<available property="maven.ant.tasks.jar.exists" file="${maven.ant.tasks.jar}" />
	
	<target name="bootstrap.maven.tasks" unless="maven.ant.tasks.jar.exists">
		<mkdir dir="${lib}/mavenant" />
		<get src="${maven.ant.tasks.url}" dest="${maven.ant.tasks.jar}" />
	</target>
		<target name="init" depends="bootstrap.maven.tasks">
			<!-- read properties from the build.properties, if any -->
			<property name="build-propfile" value="${basedir}\..\api-ant\build.properties" />
			<property file="${build-propfile}" />
			<tstamp />

			<property name="name" value="ServiceAPI" />
			<echo message="Branch = ${branch}" />
			<echo message="Version= ${version}" />
			<echo message="Build= ${build}" />
			<echo message="Tag= ${tag}" />
			<delete dir="${basedir}/target"/>

			<property name="title" value="FirstRain Service API Project" />
			<property name="package" value="com.firstrain" />
			<property name="build.dir" value="${basedir}/build" />
			<property name="build.classes.dir" value="${build.dir}/classes" />
			<property name="buildtime" value="${DSTAMP}-${TSTAMP}" />
			<property name="src.java.dir" value="${basedir}/src/main/java" />
			<property name="dist.dir" value="${basedir}/dist" />
			<property name="dist.jar" value="${dist.dir}/${name}/lib/${name}.jar" />
			<property name="module" value="ServiceAPI" />

			<property name="javac.optimize" value="true" />
			<property name="javac.debug" value="true" />
			<property name="javac.deprecation" value="yes" />

			<echo message="lib = ${lib}" />
			
			<!-- now combine the classpaths -->
			
			<path id="maven-ant-tasks.classpath" path="${build-dependencies}/mavenant/maven-ant-tasks-2.1.3.jar" />
			<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

			<!--load pom.xml for dependencies -->
			<artifact:pom id="pomfile" file="pom.xml" inheritAllProperties="true" />
			<artifact:dependencies filesetId="mvn-dependencies" pomRefId="pomfile" cacheDependencyRefs="true" useScope="compile" />
			<path id="classpath">
				<fileset refid="mvn-dependencies" />
			</path>
			<property name="classpath" refid="classpath" />
			<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="classpath" />
		</target>
		<!-- ######################################################### -->
		<target name="clean" depends="init" description="removes generated files">
			<delete dir="${build.dir}" />
			<delete dir="${dist.dir}" />
		</target>

		<target name="javadoc" depends="init" description="generates javadocs">
			<mkdir dir="${javadoc.dir}" />
			<javadoc packagenames="com.firstrain.*" verbose="false"
				sourcepath="${src.java.dir}" classpath="${classpath}" destdir="${javadoc.dir}"
				windowtitle="${title}" doctitle="${title}" bottom="${javadoc.bottom}"
				overview="${javadoc.overview}" public="true" version="true" author="true"
				splitindex="false" nodeprecated="true" nodeprecatedlist="true"
				notree="true" noindex="false" nohelp="true" nonavbar="false"
				serialwarn="false" />
		</target>
		<!-- ######################################################### -->
		<target name="compile" depends="clean" description="compiles source files">
			<mkdir dir="${build.classes.dir}" />
			<echo message="classpath= ${classpath}" />
			<javac destdir="${build.classes.dir}" srcdir="${src.java.dir}"
				classpath="${classpath}" debug="${javac.debug}" deprecation="${javac.deprecation}"
				optimize="${javac.optimize}" encoding="UTF-8" />
			<copy todir="${build.classes.dir}">
				<fileset dir="${src.java.dir}">
					<not>
						<filename name="**/*.java" />
					</not>
				</fileset>
			</copy>
		</target>
		<target name="build-jar" depends="compile">
			<mkdir dir="${dist.dir}" />
			<mkdir dir="${dist.dir}/ServiceAPI" />
			<mkdir dir="${dist.dir}/ServiceAPI/lib" />
			<mkdir dir="${dist.dir}/ServiceAPI/conf" />

			<jar jarfile="${dist.jar}">
				<fileset dir="${build.classes.dir}" />
				<manifest>
					<attribute name="Built-By" value="${user.name}" />
					<attribute name="Package" value="${package}" />
					<attribute name="Extension-Name" value="${name}" />
					<attribute name="Specification-Title" value="${title}" />
					<attribute name="Implementation-Vendor" value="firstRain" />
					<attribute name="Implementation-Branch" value="${branch}" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Implementation-Build" value="${build}" />
					<attribute name="Implementation-Tag" value="${tag}" />
					<attribute name="Implementation-BuildTime" value="${buildtime}" />
				</manifest>
			</jar>

			<copy todir="${dist.dir}/ServiceAPI/lib" flatten="true">
				<fileset refid="mvn-dependencies"/>
			</copy>
			<artifact:install file="${dist.jar}">
			<pom refid="pomfile"/>
			</artifact:install>

			<!--Add correct xmltask jar to create persistence.xml dynamically -->
			
			<echo file="${dist.dir}/ServiceAPI/conf/persistence.xml.template"
				append="false">&lt;persistence&gt;${line.separator}</echo>
			<xmltask
				source="${basedir}/../../configurations/Configurations/FRSearchDB/persistence.xml.template"
				dest="${dist.dir}/ServiceAPI/conf/persistence.xml.template">
				<!-- copy the email_db punit -->
				<copy path="/persistence/persistence-unit[@name='email_db']"
					buffer="FRSearchDB-persistence-xml" />
				<!-- paste a copy back in after the email_db punit -->
				<paste path="/persistence/persistence-unit[@name='email_db']"
					position="after" buffer="FRSearchDB-persistence-xml" />
				<!-- and change the name -->
				<replace path="/persistence/persistence-unit[@name='email_db'][2]/@name"
					withText="email_db_read" />
				<replace path="/persistence/persistence-unit[@name='cache_db']/@name"
					withText="cache_db_read" />
				<remove path="/persistence/persistence-unit[@name='mailcontent_db']" />
			</xmltask>

		</target>
		<!-- ######################################################### -->
		<target name="deploy" description="do nothing" />
		<target name="build" depends="clean,build-jar" />
		<target name="dist" depends="build" description="gump target" />
		<target name="Test" depends="build-jar" description="build and test junit code" />
		<target name="build-deploy-maven" depends="build-jar"
			description="build and deploy to specific location" />
	</project>
	