/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:49:57 GMT 2018
 */

package com.firstrain.frapi.repository.impl;

import static org.evosuite.shaded.org.mockito.Mockito.mock;

import com.firstrain.frapi.config.ServiceConfig;
import com.firstrain.frapi.util.ConvertUtil;
import com.firstrain.frapi.util.ServicesAPIUtil;
import com.firstrain.solr.client.DistributedSolrSearcher;
import java.net.URL;
import java.sql.Timestamp;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.params.HttpClientParams;
import org.apache.solr.client.solrj.impl.CommonsHttpSolrServer;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.Test;


public class EmailServiceRepositoryImplESTest {

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test0() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		ServicesAPIUtil servicesAPIUtil0 = new ServicesAPIUtil();
		ConvertUtil convertUtil0 = new ConvertUtil();
		Injector.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "convertUtil",
				convertUtil0);
		Injector
				.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "entityBaseServiceRepository",
						emailServiceRepositoryImpl0);
		Injector.validateBean(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class);
		Injector.inject(emailServiceRepositoryImpl0,
				com.firstrain.frapi.repository.impl.EmailServiceRepositoryImpl.class,
				"servicesAPIUtil", servicesAPIUtil0);
		DistributedSolrSearcher.DistributedSearchConfig distributedSolrSearcher_DistributedSearchConfig0 = mock(
				DistributedSolrSearcher.DistributedSearchConfig.class, new ViolatedAssumptionAnswer());
		URL uRL0 = MockURL.getFileExample();
		CommonsHttpSolrServer commonsHttpSolrServer0 = new CommonsHttpSolrServer(uRL0,
				null);
		emailServiceRepositoryImpl0.getTemplate((-1L));
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test1() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		emailServiceRepositoryImpl0.getSearchById(4194304L);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test2() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		ServicesAPIUtil servicesAPIUtil0 = new ServicesAPIUtil();
		ConvertUtil convertUtil0 = new ConvertUtil();
		Injector.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "convertUtil",
				convertUtil0);
		Injector
				.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "entityBaseServiceRepository",
						emailServiceRepositoryImpl0);
		Injector.validateBean(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class);
		Injector.inject(emailServiceRepositoryImpl0,
				com.firstrain.frapi.repository.impl.EmailServiceRepositoryImpl.class,
				"servicesAPIUtil", servicesAPIUtil0);
		ServiceConfig serviceConfig0 = mock(ServiceConfig.class, new ViolatedAssumptionAnswer());
		emailServiceRepositoryImpl0.getMailLog(533L, null, (-1));
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test3() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		ServicesAPIUtil servicesAPIUtil0 = new ServicesAPIUtil();
		ConvertUtil convertUtil0 = new ConvertUtil();
		Injector.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "convertUtil",
				convertUtil0);
		Injector
				.inject(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class, "entityBaseServiceRepository",
						emailServiceRepositoryImpl0);
		Injector.validateBean(servicesAPIUtil0, com.firstrain.frapi.util.ServicesAPIUtil.class);
		Injector.inject(emailServiceRepositoryImpl0,
				com.firstrain.frapi.repository.impl.EmailServiceRepositoryImpl.class,
				"servicesAPIUtil", servicesAPIUtil0);
		DistributedSolrSearcher.DistributedSearchConfig distributedSolrSearcher_DistributedSearchConfig0 = mock(
				DistributedSolrSearcher.DistributedSearchConfig.class, new ViolatedAssumptionAnswer());
		HttpClientParams httpClientParams0 = new HttpClientParams();
		emailServiceRepositoryImpl0.getEmailSchedule((-1358L));
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test4() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		emailServiceRepositoryImpl0.getEmailLogById(2L);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test5() throws Exception {
		EmailServiceRepositoryImpl emailServiceRepositoryImpl0 = new EmailServiceRepositoryImpl();
		emailServiceRepositoryImpl0.getEmailById(4194304L);
	}
}
