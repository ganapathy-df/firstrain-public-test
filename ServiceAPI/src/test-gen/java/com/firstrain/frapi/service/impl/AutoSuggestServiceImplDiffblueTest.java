package com.firstrain.frapi.service.impl;

import static org.junit.Assert.assertNull;
import static org.mockito.AdditionalMatchers.or;
import static org.mockito.Matchers.anyBoolean;
import static org.mockito.Matchers.anyInt;
import static org.mockito.Matchers.isA;
import static org.mockito.Matchers.isNull;

import com.diffblue.deeptestutils.Reflector;
import com.diffblue.deeptestutils.mock.DTUMemberMatcher;
import com.firstrain.frapi.domain.AutoSuggest;
import com.firstrain.frapi.repository.AutoSuggestServiceRepository;
import java.lang.reflect.Method;
import org.apache.log4j.Logger;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PowerMockIgnore;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

@RunWith(PowerMockRunner.class)
@PowerMockIgnore({"javax.management.*"})
public class AutoSuggestServiceImplDiffblueTest {

  @Rule public final ExpectedException thrown = ExpectedException.none();
  @Rule public final Timeout globalTimeout = new Timeout(10_000);

  /* testedClasses: AutoSuggestServiceImpl */
  // Test generated by Diffblue Deeptest.
  @PrepareForTest(AutoSuggestServiceRepository.class)
  @Test
  public void getAutoCompleteEntriesInputNullNullFalseZeroNullOutputNull() throws Exception {

    // Arrange
    final AutoSuggestServiceImpl objectUnderTest = new AutoSuggestServiceImpl();
    final AutoSuggestServiceRepository autoSuggestServiceRepository =
        PowerMockito.mock(AutoSuggestServiceRepository.class);
    PowerMockito.when(
            autoSuggestServiceRepository.getAutoCompleteEntries(
                or(isA(String.class), isNull(String.class)),
                or(isA(String.class), isNull(String.class)),
                anyBoolean(),
                anyInt(),
                or(isA(String.class), isNull(String.class))))
        .thenReturn(null);
    Reflector.setField(objectUnderTest, "repository", autoSuggestServiceRepository);
    final String input = null;
    final String typeStr = null;
    final boolean link = false;
    final int count = 0;
    final String dimensionCSV = null;

    // Act
    final AutoSuggest retval =
        objectUnderTest.getAutoCompleteEntries(input, typeStr, link, count, dimensionCSV);

    // Assert
    assertNull(retval);
  }

  // Test generated by Diffblue Deeptest.
  @PrepareForTest(Logger.class)
  @Test
  public void getAutoCompleteEntriesInputNullNullFalseZeroNullOutputNullPointerException()
      throws Exception {

    // Setup mocks
    PowerMockito.mockStatic(Logger.class);

    // Arrange
    final AutoSuggestServiceImpl objectUnderTest = new AutoSuggestServiceImpl();
    final String input = null;
    final String typeStr = null;
    final boolean link = false;
    final int count = 0;
    final String dimensionCSV = null;
    final Logger logger = PowerMockito.mock(Logger.class);
    final Method getLoggerMethod = DTUMemberMatcher.method(Logger.class, "getLogger", Class.class);
    PowerMockito.doReturn(logger)
        .when(Logger.class, getLoggerMethod)
        .withArguments(or(isA(Class.class), isNull(Class.class)));

    // Act
    thrown.expect(NullPointerException.class);
    objectUnderTest.getAutoCompleteEntries(input, typeStr, link, count, dimensionCSV);

    // Method is not expected to return due to exception thrown
  }
}
