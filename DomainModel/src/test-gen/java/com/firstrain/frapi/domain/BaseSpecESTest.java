/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 16:59:10 GMT 2018
 */

package com.firstrain.frapi.domain;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;

import com.firstrain.frapi.pojo.wrapper.BaseSet;
import com.firstrain.frapi.util.DefaultEnums;
import java.util.List;
import org.junit.Test;


public class BaseSpecESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		BaseSet.SectionType baseSet_SectionType0 = BaseSet.SectionType.CI;
		baseSpec0.setType(baseSet_SectionType0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setTopCompetitorCount(baseSpec0.DEFAULT_COUNT);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setStartEventType(0);
		assertEquals(0, baseSpec0.getStartEventType());
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setStartDate("");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setStart(baseSpec0.DEFAULT_COUNT);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setSectionMulti(false);
		assertFalse(baseSpec0.isSectionMulti());
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Integer integer0 = (int) (short) 10;
		baseSpec0.setScope(integer0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setOnlyIndustry(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setNeedRelatedDoc(false);
		assertFalse(baseSpec0.isNeedRelatedDoc());
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setNeedPhrase(false);
		assertFalse(baseSpec0.isNeedPhrase());
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Boolean boolean0 = Boolean.TRUE;
		baseSpec0.setNeedPagination(boolean0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Boolean boolean0 = Boolean.TRUE;
		baseSpec0.setNeedMatchedEntities(boolean0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Boolean boolean0 = Boolean.FALSE;
		baseSpec0.setNeedImage(boolean0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setNeedBucket(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setLastDay("Ln");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setIpad(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setIndustryClassificationId(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setIncludeSourceIdsSSV("R`+<W");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		String[] stringArray0 = new String[2];
		baseSpec0.setFilling(stringArray0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test19() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setExcludeSourceIdsSSV("");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test20() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setExcludeArticleIdsSSV("");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test21() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setEventGroup(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test22() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setEndEventType(173);
		assertEquals(173, baseSpec0.getEndEventType());
	}

	@Test(timeout = 4000)
	public void test23() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setEndDate("P3BSfvWvqrgS{k");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test24() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setDaysCount(2);
		assertEquals(2, baseSpec0.getDaysCount());
	}

	@Test(timeout = 4000)
	public void test25() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setCustomized(false);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
		assertFalse(baseSpec0.isCustomized());
	}

	@Test(timeout = 4000)
	public void test26() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setCsExcludedEventTypeGroup(null);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test27() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setCountPerEntity(baseSpec0.DEFAULT_COUNT);
		assertNull(baseSpec0.getIncludeSourceIdsSSV());
	}

	@Test(timeout = 4000)
	public void test28() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setCount(baseSpec0.DEFAULT_COUNT);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test29() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.setCacheKey("");
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test30() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		DefaultEnums.DateBucketingMode defaultEnums_DateBucketingMode0 = DefaultEnums.DateBucketingMode.AUTO;
		baseSpec0.setBucketMode(defaultEnums_DateBucketingMode0);
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test31() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.isSectionMulti();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test32() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.isNeedRelatedDoc();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test33() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.isNeedPhrase();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test34() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.isCustomized();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test35() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getType();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test36() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getTopCompetitorCount();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test37() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		int int0 = baseSpec0.getStartEventType();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test38() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getStartDate();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test39() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getStart();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test40() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getScope();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test41() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getOnlyIndustry();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test42() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getNeedPagination();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test43() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getNeedMatchedEntities();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test44() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getNeedImage();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test45() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getNeedBucket();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test46() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getLastDay();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test47() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getIpad();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test48() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getIndustryClassificationId();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test49() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getIncludeSourceIdsSSV();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test50() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getFilling();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test51() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getExcludeSourceIdsSSV();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test52() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getExcludeArticleIdsSSV();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test53() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getEventGroup();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test54() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		int int0 = baseSpec0.getEndEventType();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test55() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getEndDate();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test56() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		int int0 = baseSpec0.getDaysCount();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test57() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getCsExcludedEventTypeGroup();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test58() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		Short short0 = baseSpec0.getCountPerEntity();
		assertEquals((short) 2, (short) short0);
	}

	@Test(timeout = 4000)
	public void test59() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getCount();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test60() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getCacheKey();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}

	@Test(timeout = 4000)
	public void test61() throws Exception {
		BaseSpec baseSpec0 = new BaseSpec();
		baseSpec0.getBucketMode();
		assertEquals((short) 2, (short) baseSpec0.getCountPerEntity());
	}
}
