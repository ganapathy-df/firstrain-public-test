/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:24:14 GMT 2018
 */

package com.firstrain.frapi.service.impl;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import com.firstrain.frapi.events.EventObj;
import com.firstrain.frapi.events.IEvents;
import java.util.List;
import org.junit.Test;


public class SingleCompanyEventsFilterESTest {

	@Test(timeout = 4000)
	public void test0() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventTypeEnum iEvents_EventTypeEnum0 = IEvents.EventTypeEnum.TYPE_MGMT_CHANGE_CHIEF_TECHNOLOGY_OFFICER_TURNOVER;
		eventObj0.setEventType(iEvents_EventTypeEnum0);
		int int0 = SingleCompanyEventsFilter.priorityRank(eventObj0);
		assertEquals(7, int0);
	}

	@Test(timeout = 4000)
	public void test1() throws Exception {
		EventObj eventObj0 = new EventObj();
		IEvents.EventGroupEnum iEvents_EventGroupEnum0 = IEvents.EventGroupEnum.GROUP_STOCK_PRICE;
		eventObj0.setEventGroup(iEvents_EventGroupEnum0);
		boolean boolean0 = SingleCompanyEventsFilter.hasNullProp(eventObj0);
		assertFalse(boolean0);
	}

	@Test(timeout = 4000)
	public void test2() throws Exception {
		EventObj eventObj0 = new EventObj();
		boolean boolean0 = SingleCompanyEventsFilter.hasNullProp(eventObj0);
		assertTrue(boolean0);
	}

	@Test(timeout = 4000, expected = IllegalArgumentException.class)
	public void test3() throws Exception {
		MultiEntityEventsFilter multiEntityEventsFilter0 = new MultiEntityEventsFilter((-2767));
		SingleCompanyEventsFilter singleCompanyEventsFilter0 = new SingleCompanyEventsFilter((-2767),
				false, multiEntityEventsFilter0);
		// Undeclared exception!
		singleCompanyEventsFilter0.filterEvents(null);
	}

	@Test(timeout = 4000)
	public void test4() throws Exception {
		EventObj eventObj0 = new EventObj();
		int int0 = SingleCompanyEventsFilter.priorityRank(eventObj0);
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test5() throws Exception {
		SingleCompanyEventsFilter singleCompanyEventsFilter0 = new SingleCompanyEventsFilter(0);
		List<IEvents> list0 = singleCompanyEventsFilter0.filterEvents(null);
		assertTrue(list0.isEmpty());
	}
}
