/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 28 17:05:25 GMT 2018
 */

package com.firstrain.frapi.domain;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import java.util.Map;
import org.junit.Test;


public class SectionSpecESTest {

	@Test(timeout = 4000)
	public void test00() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		String string0 = sectionSpec0.toString();
		assertEquals("SectionSpec [start=0, count=10, width=0, height=0]", string0);
	}

	@Test(timeout = 4000)
	public void test01() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setWidth(0);
		assertEquals(0, sectionSpec0.getWidth());
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test02() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setStart(sectionSpec0.DEFAULT_COUNT);
		assertNull(sectionSpec0.getNeedBucket());
	}

	@Test(timeout = 4000)
	public void test03() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setNeedTweetAccelerometer(null);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test04() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setNeedRelatedDoc(true);
		assertTrue(sectionSpec0.isNeedRelatedDoc());
	}

	@Test(timeout = 4000)
	public void test05() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setNeedPagination(null);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test06() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setNeedBucket(null);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test07() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setHeight((short) 2360);
		assertEquals(2360, sectionSpec0.getHeight());
	}

	@Test(timeout = 4000)
	public void test08() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setCount(sectionSpec0.DEFAULT_COUNT);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test09() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.setCallbackMethodsMap(null);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test10() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.isNeedRelatedDoc();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test11() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		int int0 = sectionSpec0.getWidth();
		assertEquals(0, int0);
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test12() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		Short short0 = sectionSpec0.getStart();
		assertEquals((short) 0, (short) short0);
	}

	@Test(timeout = 4000)
	public void test13() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.getNeedTweetAccelerometer();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test14() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.getNeedPagination();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test15() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.getNeedBucket();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test16() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		int int0 = sectionSpec0.getHeight();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test17() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.getCount();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}

	@Test(timeout = 4000)
	public void test18() throws Exception {
		SectionSpec sectionSpec0 = new SectionSpec();
		sectionSpec0.getCallbackMethodsMap();
		assertEquals((short) 0, (short) sectionSpec0.getStart());
	}
}
