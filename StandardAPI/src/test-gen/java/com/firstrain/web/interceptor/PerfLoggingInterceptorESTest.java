/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 18:38:42 GMT 2018
 */

package com.firstrain.web.interceptor;

import static org.evosuite.shaded.org.mockito.Mockito.anyString;
import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.springframework.web.servlet.ModelAndView;

public class PerfLoggingInterceptorESTest {

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test0() throws Exception {
		PerfLoggingInterceptor perfLoggingInterceptor0 = new PerfLoggingInterceptor();
		HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class,
				new ViolatedAssumptionAnswer());
		doReturn(null).when(httpServletRequest0).getParameter(anyString());
		doReturn(null).when(httpServletRequest0).getRemoteAddr();
		doReturn(null, (String) null).when(httpServletRequest0).getHeader(anyString());
		doReturn(null).when(httpServletRequest0).getRequestURI();
		HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(
				httpServletRequest0);
		Object object0 = new Object();
		ModelAndView modelAndView0 = new ModelAndView("ziqYa}Po0&U~p", "ziqYa}Po0&U~p", null);
		perfLoggingInterceptor0
				.postHandle(httpServletRequestWrapper0, null, object0, modelAndView0);
	}

	@Test(timeout = 4000, expected = NullPointerException.class)
	public void test1() throws Exception {
		PerfLoggingInterceptor perfLoggingInterceptor0 = new PerfLoggingInterceptor();
		HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class,
				new ViolatedAssumptionAnswer());
		doReturn("RbGPn#4HpAYPVu", (String) null).when(httpServletRequest0).getParameter(anyString());
		doReturn(null).when(httpServletRequest0).getRemoteAddr();
		doReturn("", "", null, null).when(httpServletRequest0).getHeader(anyString());
		doReturn(null).when(httpServletRequest0).getQueryString();
		doReturn(null, (String) null).when(httpServletRequest0).getRequestURI();
		HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(
				httpServletRequest0);
		HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class,
				new ViolatedAssumptionAnswer());
		HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(
				httpServletResponse0);
		ModelAndView modelAndView0 = new ModelAndView("serverStartTime", "?(", "serverStartTime");
		perfLoggingInterceptor0.postHandle(httpServletRequestWrapper0, httpServletResponseWrapper0,
				httpServletResponseWrapper0, modelAndView0);
		perfLoggingInterceptor0.postHandle(httpServletRequestWrapper0, httpServletResponseWrapper0,
				httpServletRequestWrapper0, modelAndView0);
		Object object0 = new Object();
		perfLoggingInterceptor0
				.preHandle(httpServletRequestWrapper0, httpServletResponseWrapper0, object0);
	}
}
